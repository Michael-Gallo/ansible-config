- name: Importing distribution specific vars
  ansible.builtin.include_vars: "{{ ansible_distribution }}.yml"
  tags: always

- name: Install base packages
  ansible.builtin.package:
    state: present
    name: "{{ packages }}"
  when: packages is defined

- name: Install fonts
  ansible.builtin.package:
    state: present
    name: "{{ fonts }}"
  when: fonts is defined

- name: Create an ansible user
  ansible.builtin.user:
    name: ansib
    system: true

- name: Set up sudo for ansible user
  ansible.builtin.copy:
    src: files/sudoer_ansib
    dest: /etc/sudoers.d/ansib
    owner: root
    group: root
    mode: "0440"

- name: Add cron job to ansible-pull
  vars:
    playbook_location: https://gitlab.com/michaelagallo95/ansible-config
  ansible.builtin.cron:
    name: ansible configure
    user: ansib
    hour: "*/4"
    job: ansible-pull -U  {{ playbook_location }}

- name: Enable lightdm
  ansible.builtin.systemd_service:
    service: lightdm
    enabled: true

# Clone Suckless Utils if needed
- name: Check if DWM already cloned
  ansible.builtin.stat:
    path: "$HOME/dwm"
  register: dwm_path

- name: Clone dwm build # noqa: latest
  ansible.builtin.git:
    repo: https://gitlab.com/michaelagallo95/dwm.git
    dest: $HOME/dwm
    clone: true
    update: false
    version: HEAD
  when: not dwm_path.stat.exists

- name: Check if Dmenu already cloned
  ansible.builtin.stat:
    path: "$HOME/dmenu"
  register: dmenu_path

- name: Clone dmenu build # noqa: latest
  ansible.builtin.git:
    repo: https://gitlab.com/michaelagallo95/dmenu.git
    dest: $HOME/dmenu
    clone: true
    update: false
    version: HEAD
  when: not dmenu_path.stat.exists

- name: Check if st already cloned
  ansible.builtin.stat:
    path: "$HOME/st"
  register: st_path

- name: Clone st build # noqa: latest
  ansible.builtin.git:
    repo: https://github.com/LukeSmithxyz/st.git
    dest: $HOME/st
    clone: true
    update: false
    version: HEAD
  when: not st_path.stat.exists
