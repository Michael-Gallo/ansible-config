---
- hosts: all
  become: true
  pre_tasks:
    - name: pre-run | update package cache (arch)
      tags: always
      pacman: 
        update_cache: yes
        upgrade: yes
      changed_when: False
      when: ansible_distribution == "Archlinux"

    - name: pre-run | update package cache (debian, etc)
      tags: always
      apt: 
        update_cache: yes
      changed_when: False 
      when: ansible_distribution in ["Debian", "Ubuntu"]

    - name: Ensure flatpak is installed
      tags: always
      package:
        state: latest
        name: flatpak

    - name: Ensure Fedora flathub is not in way
      flatpak_remote:
        name: fedora
        state: absent
      when: ansible_distribution == 'Fedora'

    - name: Ensure flathub is active
      flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo

    - name: Ensure RPM Fusion (Free) is active (fedora)
      dnf:
        name: 
          - "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ansible_distribution_major_version}}.noarch.rpm"
          - "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ansible_distribution_major_version}}.noarch.rpm"
        state: present
        disable_gpg_check: yes
      when: ansible_distribution == 'Fedora'

  tasks:
    - name: Installing utility packages (Arch)
      package:
        state: latest
        name:
          - arandr
          - btop
          - chromium
          - curl
          - deluge
          - fd
          - flatpak
          - git
          - htop
          - neofetch
          - neovim
          - python-pynvim
          - ranger
          - ripgrep
          - rsync
          - openssh
          - wget
          - yadm
          - zsh
      when: ansible_distribution == "Archlinux"

    - name: Installing utility packages (Fedora)
      package:
        state: present
        name:
          - autojump
          - '@Development tools'
          - exa
          - fd-find
          - fira-code-fonts # For emacs
          - ffmpeg # needed codecs for video
          - fzf
          - gcc-c++
          - gmime30-devel # Build requirement mu4e
          - libX11-devel
          - libXinerama-devel
          - libXft-devel
          - meson
          - neofetch
          - neovim
          - nodejs
          - openssh
          - python3-devel # Necessary for uberzug
          - python3-neovim
          - python3-pip
          - ripgrep
          - tldr
          - xapian-core-devel # Build Requirement Mu4e
          - yarnpkg
          - zathura
          - zathura-pdf-mupdf
          - zsh
      when: ansible_distribution == "Fedora"

    - name: Removing unwanted packages
      package:
        state: absent
        name: audacity

    - name: Installing fonts
      package:
        state: latest
        name:
          - noto-fonts
          - ttf-dejavu
          - ttf-fira-code
          - ttf-fira-mono
          - ttf-font-awesome
          - ttf-joypixels
          - ttf-liberation
          - ttf-opensans
          - ttf-ubuntu-font-family
          - adobe-source-han-sans-cn-fonts
          - adobe-source-han-sans-kr-fonts
          - adobe-source-han-sans-jp-fonts
          - otf-fira-mono
          - otf-font-awesome
      when: ansible_distribution == "Archlinux"



    - name: Install flatpaks
      flatpak:
        name: 
          - net.cozic.joplin_desktop
          - com.discordapp.Discord
          - com.skype.Client
        state: present

    - name: enable ssh
      service:
        name: sshd
        state: started
        enabled: yes




- name: Tasks that need to be ran as user
  hosts: all
  become: no
  vars:
    user_home: "/home/{{ user }}"
    yadm_location: "{{ user_home }}/.ansible-project"
  tasks:
    - name: change user shell to zsh 
      become: yes
      user:
        name: "{{ user }}"
        shell: /bin/zsh

    - name: Clone yadm (fedora)
      git:
        repo: https://github.com/TheLocehiliosan/yadm.git 
        dest: "{{ yadm_location }}"
        update: yes
      when: ansible_distribution == "Fedora"

    - name: put yadm in bin
      become: true
      file:
        src: "{{ yadm_location }}/yadm"
        dest: /bin/yadm
        state: link
      when: ansible_distribution == "Fedora"

    - name: install pyenv
      git:
        repo: https://github.com/pyenv/pyenv.git
        dest: ~/.pyenv
        update: yes

    - name: install exa
      community.general.cargo:
        name: exa
        state: latest
      ignore_errors: yes
      when: ansible_distribution != "Fedora"

    - name: Ensure the vim autoload directory exists
      file:
        path: "$XDG_DATA_HOME/nvim/site/autoload/"
        state: directory

    - name: ensure private env file exists
      file:
        path: "$XDG_CONFIG_HOME/zsh/private_env"
        state: touch
      changed_when: False

    - name: ensure bwsession file exists
      file:
        path: "$XDG_CACHE_HOME/bwsession"
        state: touch
      changed_when: False


    - name: download vim-plug
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: "$XDG_DATA_HOME/nvim/site/autoload/"


# run roles

- name: running dev role
  hosts: all
  tags: dev
  become: true
  roles: 
    - dev


- hosts: all
  tags: gamer
  become: true
  roles: 
    - gamer
